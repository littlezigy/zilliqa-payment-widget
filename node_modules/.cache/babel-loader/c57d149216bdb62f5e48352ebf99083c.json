{"remainingRequest":"/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/node_modules/babel-loader/lib/index.js!/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/node_modules/eslint-loader/index.js??ref--13-0!/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/src/components/widget.js?vue&type=script&lang=js&","dependencies":[{"path":"/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/src/components/widget.js","mtime":1604838628331},{"path":"/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0IHsgWmlsc3dhcCwgV2FsbGV0UHJvdmlkZXIgfSBmcm9tICd6aWxzd2FwLXNkayc7CmltcG9ydCB7IFppbGxpcWEgfSBmcm9tICdAemlsbGlxYS1qcy96aWxsaXFhJzsgLy8gaW1wb3J0ICogYXMgc2RrIGZyb20gJ3ppbHN3YXAtc2RrJzsKCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciB6cSA9IG5ldyBaaWxsaXFhKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd2FsbGV0OiBudWxsLAogICAgICBwYXlBbW91bnQ6IDEwMCwKICAgICAgdG9rZW5zOiBbXSwKICAgICAgcGF5bWVudFRva2VuOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgbmFtZTogJycKICAgICAgfSwKICAgICAgbmV0d29yazogJycsCiAgICAgIHRlc3RuZXQ6IHsKICAgICAgICB0b2tlbnM6IFtdCiAgICAgIH0sCiAgICAgIG1haW5uZXQ6IHsKICAgICAgICB0b2tlbnM6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczogewogICAgbWVyY2hhbnRBZGRyZXNzOiBTdHJpbmcsCiAgICBhbW91bnQ6IE51bWJlcgogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hSYXRlczogZnVuY3Rpb24gZmV0Y2hSYXRlcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwcm92aWRlciA9IHpxKHdpbmRvdy56aWxQYXksIFt0aGlzLndhbGxldF0pOwoKICAgICAgaWYgKHRoaXMucGF5bWVudFRva2VuLm5hbWUgIT0gJ1hTR0QnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYW1vdW50OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwcm8gPSBXYWxsZXRQcm92aWRlcjsKICAgICAgICBjb25zb2xlLmxvZygnUFJPVklERVIgRlJPTSBTV0FQJywgcHJvKTsKICAgICAgICB2YXIgemlsc3dhcCA9IG5ldyBaaWxzd2FwKHRoaXMubmV0d29yaywgcHJvdmlkZXIpOwogICAgICAgIHJldHVybiB6aWxzd2FwLmdldFJhdGVzRm9yT3V0cHV0KHRoaXMucGF5bWVudFRva2VuLmlkLCB0aGlzLnRva2Vucy5YU0dELCB0aGlzLmFtb3VudCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnUkVTVUxUIFJBVEVTJywgcmVzLmRhdGEpOwogICAgICAgICAgX3RoaXMucGF5QW1vdW50ID0gcmVzLmRhdGE7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBwYXk6IGZ1bmN0aW9uIHBheSgpIHsKICAgICAgLy8gY29uc3QgcHJvID0gV2FsbGV0UHJvdmlkZXI7CiAgICAgIGlmICh0aGlzLnBheW1lbnRUb2tlbi5uYW1lID09ICdYU0dEJykgcmV0dXJuIHRoaXMucGF5WFNHRCgpO2Vsc2UgcmV0dXJuIHRoaXMucGF5SW5aUkMyMCgpOwogICAgfSwKICAgIHBheVhTR0Q6IGZ1bmN0aW9uIHBheVhTR0QoKSB7fSwKICAgIHBheUluWlJDMjA6IGZ1bmN0aW9uIHBheUluWlJDMjAoKSB7CiAgICAgIHpxID0gbmV3IFppbGxpcWEobnVsbCwgd2luZG93LnppbFBheS5wcm92aWRlcik7CiAgICAgIGNvbnNvbGUubG9nKCdaUScsIHpxKTsKICAgICAgdmFyIHByb3ZpZGVyID0genEucHJvdmlkZXI7IC8vIFRPRE86IEZpeCBjb25zdHJ1Y3RvciBmdW5jdGlvbiBlcnJvcgoKICAgICAgdmFyIHppbFN3YXAgPSBuZXcgWmlsc3dhcCh0aGlzLm5ldHdvcmssIHByb3ZpZGVyKTsKICAgICAgY29uc29sZS5sb2coJ1pJTFNXQVAgT0JKJywgemlsU3dhcCk7CiAgICAgIHJldHVybiB6aWxTd2FwLnN3YXBXaXRoRXhhY3RPdXRwdXQodGhpcy5wYXltZW50VG9rZW4uaWQsIHRoaXMudG9rZW5zLlhTR0QsIHRoaXMuYW1vdW50LCAyMDAsIHRoaXMubWVyY2hhbnRBZGRyZXNzKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZygnUkVTUE9OU0UnLCByZXMpOwogICAgICB9KTsKICAgIH0sCiAgICBkZXRlY3ROZXR3b3JrOiBmdW5jdGlvbiBkZXRlY3ROZXR3b3JrKCkgewogICAgICB0aGlzLm5ldHdvcmsgPSB3aW5kb3cuemlsUGF5LndhbGxldC5uZXQgPT0gJ3Rlc3RuZXQnID8gJ1Rlc3ROZXQnIDogJ01haW5OZXQnOwogICAgfSwKICAgIGZldGNoVG9rZW5zOiBmdW5jdGlvbiBmZXRjaFRva2VucygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU3dpdGNoZW8vemlsc3dhcC10b2tlbi1saXN0L21hc3Rlci90b2tlbnMuanNvbicpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5tYWlubmV0LnRva2VucyA9IHJlcy5kYXRhLk1haW5OZXQ7CiAgICAgICAgX3RoaXMyLnRlc3RuZXQudG9rZW5zID0gcmVzLmRhdGEuVGVzdE5ldDsKICAgICAgfSk7CiAgICB9LAogICAgc2V0VG9rZW5zOiBmdW5jdGlvbiBzZXRUb2tlbnMoKSB7CiAgICAgIGlmICh0aGlzLm5ldHdvcmsubWF0Y2goL3Rlc3RuZXQvaSkpIHRoaXMudG9rZW5zID0gdGhpcy50ZXN0bmV0LnRva2VucztlbHNlIGlmICh0aGlzLm5ldHdvcmsubWF0Y2goL21haW5uZXQvaSkpIHRoaXMudG9rZW5zID0gdGhpcy5tYWlubmV0LnRva2VuczsKICAgIH0sCiAgICBpbml0WnE6IGZ1bmN0aW9uIGluaXRacSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gd2luZG93LnppbFBheS53YWxsZXQuY29ubmVjdCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMgPT09IHRydWUpIHsKICAgICAgICAgIF90aGlzMy53YWxsZXQgPSB3aW5kb3cuemlsUGF5LndhbGxldC5kZWZhdWx0QWNjb3VudDsKICAgICAgICAgIGRlbGV0ZSB6cS5zdWJzY3JpcHRpb25CdWlsZGVyOyAvL2NvbnNvbGUubG9nKCdXSU4gWklMT1BBWScsIHpxKTsKICAgICAgICAgIC8vbGV0IHppbHN3YXAgPSBuZXcgWmlsc3dhcCh0aGlzLm5ldHdvcmssIHsgLi4uenEsIHdhbGxldDogdGhpcy53YWxsZXQgfSk7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZygnWklMUEFZJywgemlsc3dhcCk7CgogICAgICAgICAgX3RoaXMzLmRldGVjdE5ldHdvcmsoKTsKCiAgICAgICAgICByZXR1cm4gX3RoaXMzLmZldGNoVG9rZW5zKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczMuc2V0VG9rZW5zKCk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5wYXltZW50VG9rZW4gPSB7CiAgICAgICAgICAgICAgaWQ6IF90aGlzMy50b2tlbnMuWklMLAogICAgICAgICAgICAgIG5hbWU6ICdaSUwnCiAgICAgICAgICAgIH07CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHJlcyA9PT0gZmFsc2UpIGFsZXJ0KCJDb3VsZCBub3QgY29ubmVjdCB0byBaaWxQYXkgd2FsbGV0Iik7ZWxzZSB7CiAgICAgICAgICBhbGVydCgiU29tZXRoaW5nIGVsc2UgaXMgdGhlIG1hdHRlci4gQ2hlY2sgY29uc29sZSIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgdmFyIGNvdW50ZXIgPSA1OwogICAgdmFyIHJlZnJlc2ggPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh0eXBlb2Ygd2luZG93LnppbFBheSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICBjbGVhckludGVydmFsKHJlZnJlc2gpOwogICAgICAgIHJldHVybiBfdGhpczQuaW5pdFpxKCk7CiAgICAgIH0gZWxzZSBjb3VudGVyLS07CgogICAgICBpZiAoY291bnRlciA9PSAwKSB7CiAgICAgICAgcmV0dXJuIGFsZXJ0KCJZb3UgbmVlZCB0byBoYXZlIHRoZSBaaWxQYXkgYnJvd3NlciBleHRlbnNpb24gaW5zdGFsbGVkXG5HZXQgaXQgaGVyZTogaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvemlscGF5L2tsbmFlampnYmlibWhsZXBobmhwbWFvZm9oZ2twZ2tkIik7CiAgICAgIH0KICAgIH0sIDUwMCk7CiAgfQp9Ow=="},{"version":3,"sources":["/media/adesuwa/Files/WebDev_Projects/nov_hackathon/zilswapPaymentWidget/src/components/widget.js"],"names":["Zilswap","WalletProvider","Zilliqa","axios","zq","data","wallet","payAmount","tokens","paymentToken","id","name","network","testnet","mainnet","props","merchantAddress","String","amount","Number","methods","fetchRates","provider","window","zilPay","pro","console","log","zilswap","getRatesForOutput","XSGD","then","res","pay","payXSGD","payInZRC20","zilSwap","swapWithExactOutput","detectNetwork","net","fetchTokens","get","MainNet","TestNet","setTokens","match","initZq","connect","defaultAccount","subscriptionBuilder","ZIL","alert","mounted","counter","refresh","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import { Zilswap, WalletProvider } from 'zilswap-sdk';\nimport { Zilliqa } from '@zilliqa-js/zilliqa';\n// import * as sdk from 'zilswap-sdk';\nimport axios from 'axios';\n\nlet zq = new Zilliqa();\n\nexport default {\n    data() {\n        return {\n            wallet: null,\n            payAmount: 100,\n            tokens: [],\n            paymentToken: {id: null, name: ''},\n            network: '',\n            testnet: { tokens: [] },\n            mainnet: { tokens: [] },\n        }\n    },\n\n    props: {\n        merchantAddress: String,\n        amount: Number\n    },\n    methods: {\n        fetchRates: function() {\n            const provider = zq(window.zilPay, [ this.wallet ]);\n            if(this.paymentToken.name != 'XSGD') {\n                return this.amount;\n            } else {\n                const pro = WalletProvider;\n                console.log('PROVIDER FROM SWAP', pro);\n                let zilswap = new Zilswap(this.network, provider);\n\n                return zilswap.getRatesForOutput(this.paymentToken.id, this.tokens.XSGD, this.amount)\n                .then(res => {\n                    console.log('RESULT RATES', res.data);\n                    this.payAmount = res.data;\n                });\n            }\n        },\n\n        pay: function() {\n            // const pro = WalletProvider;\n            if(this.paymentToken.name == 'XSGD')\n                return this.payXSGD();\n            else return this.payInZRC20();\n        },\n        payXSGD: function() {\n        },\n        payInZRC20: function() {\n            zq = new Zilliqa(null, window.zilPay.provider);\n            console.log('ZQ', zq);\n            const provider = zq.provider;\n            // TODO: Fix constructor function error\n            let zilSwap = new Zilswap(this.network, provider);\n            console.log('ZILSWAP OBJ', zilSwap);\n            return zilSwap.swapWithExactOutput(this.paymentToken.id, this.tokens.XSGD, this.amount, 200, this.merchantAddress)\n            .then(res => {\n                console.log('RESPONSE', res);\n            });\n        },\n        detectNetwork: function() {\n            this.network = (window.zilPay.wallet.net == 'testnet') ? 'TestNet' : 'MainNet';\n        },\n        fetchTokens: function() {\n            return axios.get('https://raw.githubusercontent.com/Switcheo/zilswap-token-list/master/tokens.json')\n            .then(res => {\n                this.mainnet.tokens = res.data.MainNet;\n                this.testnet.tokens = res.data.TestNet;\n            });\n        },\n        setTokens: function() {\n            if (this.network.match(/testnet/i)) \n                this.tokens = this.testnet.tokens;\n            else if(this.network.match(/mainnet/i))\n                this.tokens = this.mainnet.tokens;\n        }, \n        initZq: function() {\n            return window.zilPay.wallet.connect()\n            .then(res => {\n                if(res === true) {\n                    this.wallet = window.zilPay.wallet.defaultAccount;\n                    delete zq.subscriptionBuilder;\n                    //console.log('WIN ZILOPAY', zq);\n                    //let zilswap = new Zilswap(this.network, { ...zq, wallet: this.wallet });\n                    // console.log('ZILPAY', zilswap);\n\n                    this.detectNetwork();\n\n                    return this.fetchTokens()\n                    .then(() => this.setTokens())\n                    .then(() => this.paymentToken = { id: this.tokens.ZIL, name: 'ZIL' });\n\n                } else if(res === false)\n                    alert(\"Could not connect to ZilPay wallet\");\n                else {\n                    alert(\"Something else is the matter. Check console\");\n                }\n            });\n        }\n    },\n    mounted() {\n        let counter = 5;\n        let refresh = setInterval(() => {\n            if(typeof window.zilPay !== 'undefined') {\n                clearInterval(refresh);\n                return this.initZq()\n            } else\n                counter--;\n            if(counter == 0) {\n                return alert(\"You need to have the ZilPay browser extension installed\\nGet it here: https://chrome.google.com/webstore/detail/zilpay/klnaejjgbibmhlephnhpmaofohgkpgkd\");\n            }\n        }, 500);\n\n    }\n}\n"]}]}